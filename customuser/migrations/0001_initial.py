# Generated by Django 5.1.1 on 2024-09-25 05:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('activity', models.CharField(blank=True, choices=[('1', 'Самозанятость'), ('2', 'Фриланс'), ('3', 'Индивидуальное предпринимательство'), ('4', 'Ремесленничество'), ('5', 'Услуги на дому'), ('6', 'Консультирование'), ('7', 'Репетиторство'), ('8', 'Творческая деятельность'), ('9', 'Сельскохозяйственная деятельность'), ('10', 'Интернет-бизнес'), ('11', 'Транспортные услуги'), ('12', 'Спортивная деятельность'), ('13', 'Сфера услуг'), ('14', 'Строительство')], max_length=2, null=True, verbose_name='Тип деятельности')),
                ('description', models.TextField(blank=True, max_length=555, verbose_name='Описание')),
                ('number_persons', models.IntegerField(blank=True, null=True, verbose_name='Количество человек в команде')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Юридический адрес')),
                ('telegram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram ID или @UserName')),
                ('web_url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='URL веб сайта')),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True, verbose_name='whatsapp номер, c кодом страны')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер телефона')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Фото')),
                ('gender', models.CharField(blank=True, choices=[('М', 'Мужчина'), ('Э', 'Женшина'), ('Н', 'Не обязательно')], max_length=1, null=True, verbose_name='Пол')),
                ('nationality', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Натция')),
                ('applicant', models.BooleanField(blank=True, default=False, null=True, verbose_name='Соискатель?')),
                ('name_activity', models.CharField(default='', max_length=250, verbose_name='Основные навыки или профессия')),
                ('team', models.BooleanField(blank=True, default=False, null=True, verbose_name='У вас есть команда?')),
                ('schedule', models.CharField(blank=True, choices=[('1', 'Полный рабочий день'), ('2', 'Неполный рабочий день'), ('3', 'Частичная занятость'), ('4', 'Удаленная работа'), ('5', 'Надомная работа'), ('6', 'Гибкий график'), ('7', 'Посменный'), ('8', 'Свободный график'), ('9', 'Вахтовый метод')], max_length=1, null=True, verbose_name='График работы')),
                ('relocation', models.CharField(blank=True, choices=[('1', 'Не готов к переезду'), ('2', 'Готов к переезду в пределах города'), ('3', 'Готов к переезду в пределах региона'), ('4', 'Готов к переезду в пределах страны'), ('5', 'Готов к международному переезду'), ('6', 'Готов к переезду на временной основе'), ('7', 'Готов к постоянному переезду')], max_length=1, null=True, verbose_name='Переезд')),
                ('education', models.CharField(blank=True, choices=[('1', 'Среднее образование'), ('2', 'Среднее профессиональное образование'), ('3', 'Высшее образование (бакалавр)'), ('4', 'Высшее образование (магистр)'), ('5', 'Докторская степень'), ('6', 'Неоконченное высшее образование'), ('7', 'Специализированное образование (курсы, сертификаты)'), ('8', 'Профессиональное обучение'), ('9', 'Дополнительное образование')], max_length=1, null=True, verbose_name='Образование')),
                ('experience', models.CharField(blank=True, choices=[('1', 'Без опыта'), ('2', 'От 1 года до 3 лет'), ('3', 'От 3 до 5 лет'), ('4', 'От 5 лет'), ('5', 'Стажировка'), ('6', 'Волонтерский опыт'), ('7', 'Производственная практика')], max_length=2, null=True, verbose_name='Опыт работы')),
                ('desired_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Требуемая плата')),
                ('enlarge_view', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество просмотров')),
                ('time_create', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
